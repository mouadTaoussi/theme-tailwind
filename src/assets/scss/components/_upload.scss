
@use "sass:map";
@use "./utils/all" as utils;
@use "./utils/variables" as vars;

/* @docs */
// $upload-colors: file.$file-colors !default;
// $upload-bg: transparent !default;
// $upload-draggable-padding: 0.5rem !default;
// $upload-border-color: css.getVar("grey-light") !default;
/* @docs */

.upload {
    input[type="file"] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        outline: none;
        cursor: pointer;
        z-index: -1;
    }
    .upload-draggable {
        cursor: pointer;
        padding: 32px; // add var
        // background-color: css.getVar("upload-bg"); // add var
        border: 1px dashed grey; // add var
        border-radius: 3px; // add var
    }

    @each $name, $variant in vars.$theme-colors {
            .is-#{$name} {
                &:hover,
                &.is-hovered {
                    // @include css.register-vars(
                    //     (
                    //         "upload-bg": #{rgba($color, 0.05)},
                    //         "upload-border-color": #{$color},
                    //     )
                    // );
                    background-color: utils.variant-varname($variant,100); // 100 is given to have color with less opacity
                    border-color: utils.variant-varname($variant,vars.$variant-degree);
                    color: utils.variant-varname($variant,vars.$variant-degree);
                }
            }
    }

    &.is-expanded {
        width: 100%;

        .upload-draggable {
            width: 100%;
        }
    }

    &.is-disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    // &.is-rounded {
    //     border-radius: css.getVar("radius-rounded");

    //     .file-name {
    //         border-top-right-radius: css.getVar("radius-rounded");
    //         border-bottom-right-radius: css.getVar("radius-rounded");
    //     }
    // }
}
