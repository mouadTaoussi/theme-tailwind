
@use "sass:map";
@use "./utils/all" as utils;
@use "./utils/variables" as vars;


/* @docs */
$btn-spacer: 0.5rem !default;
$btn-font-size: var(--text-base) !default;
$btn-font-weight: 500 !default;
$btn-line-height: var(--text-base--line-height) !default;
$btn-padding: 0.50rem 1.75rem !default;
// $btn-box-shadow: 1px 1px 16px rgba(207,207,207,10) !default;
/* @docs */

@mixin button-size ($padding, $font-size, $line-height){
    padding: $padding;
    font-size: $font-size;
    line-height: $line-height;
}

.button {
    background-color: white;
    color: black;
    // 
    padding:$btn-padding;
    // 
    font-size: $btn-font-size;
    font-weight: $btn-font-weight;
    // 
    line-height: $btn-line-height;
    // 
    // transition: all vars.$speed-slow var(--ease-in);  -> duration-100 ease-in
    // 
    border: 0.005rem;
    border-style: var(--tw-border-style);
    border-color: rgb(227, 227, 227);
    //     
   &:hover {
        opacity: .9;
        // box-shadow: $btn-box-shadow;
    }
    
    .button-wrapper {
        display: inline-flex;
        align-items: center;
    }

    @each $name, $variant in vars.$theme-colors {
        &.is-#{$name} {
            background-color: utils.variant-varname($variant,vars.$variant-degree);
            border-color: utils.variant-varname($variant,vars.$variant-degree);
            color: white;
            &:hover {
                opacity: .9;
            }
            &.border {
                background-color: transparent;
                color: utils.variant-varname($variant,vars.$variant-degree);
                // // 
                &:hover {
                    background-color: utils.variant-varname($variant,vars.$variant-degree);
                    color: white;
                // // 
                }
            }
            &.inverted {
                color: utils.variant-varname($variant,vars.$variant-degree);
                background-color: transparent;
                // 
                border-color: transparent;
                &:hover {
                    background-color: utils.variant-varname($variant,"100");
                    color: utils.variant-varname($variant,vars.$variant-degree);
                    // 
                    border-color: utils.variant-varname($variant,vars.$variant-degree);
                }
            }
        }
    }

    &.is-small {
        @include button-size(0.125rem 1.5rem, var(--text-sm), var(--text-sm--line-height));
    }
    &.is-medium {
        @include button-size(0.25rem 1.5rem, var(--text-base), var(--text-base--line-height));
    }
    &.is-large {
        @include button-size(0.5rem 1.5rem, var(--text-lg), var(--text-lg--line-height));
    }

    &.disabled {
        opacity: .5; 
        &:hover {
            cursor: not-allowed;
            box-shadow: none;
        }
    }
    .icon {
        margin-right: $btn-spacer;
        margin-left: calc($btn-spacer / 2);
    }
}

.button:not(:last-child):not(.w-full) {
    margin-right: $btn-spacer;
}